{"version":3,"sources":["services/serv.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","Error","message","className","Notification","Button","props","onClick","type","text","Input","value","onChange","App","useState","errorMessage","setErrorMessage","notificationMessage","setnotificatioMessage","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filterData","setFilterData","found","find","el","name","toLowerCase","Nfound","number","useEffect","noteService","then","response","data","console","log","length","deletePersonOf","person","p","window","confirm","res","persond","filter","setTimeout","catch","error","updatePerson","personObject","map","Show","deletePerson","e","target","result","filterLow","arrLow","includes","indexOf","handleNameFilter","preventDefault","alert","pers","concat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81398c6e.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = \"http://localhost:3001/api/persons\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  return axios.post(baseUrl, newObject);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject);\r\n};\r\nconst elimina = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`);\r\n};\r\nexport default {\r\n  getAll: getAll,\r\n  create: create,\r\n  update: update,\r\n  elimina: elimina,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport noteService from \"./services/serv\";\n\nimport \"./index.css\";\nconst Error = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className=\"error\">{message}</div>;\n};\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className=\"notification\">{message}</div>;\n};\n\nconst Button = (props) => {\n  return (\n    <button onClick={props.onClick} type={props.type}>\n      {props.text}\n    </button>\n  );\n};\nconst Input = (props) => {\n  return <input value={props.value} onChange={props.onChange} />;\n};\nconst App = () => {\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [notificationMessage, setnotificatioMessage] = useState(null);\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filterData, setFilterData] = useState(persons);\n  const found = persons.find(\n    (el) => el.name.toLowerCase() === newName.toLowerCase()\n  );\n  const Nfound = persons.find((el) => el.number === newNumber);\n\n  useEffect(() => {\n    noteService.getAll().then((response) => {\n      setPersons(response.data);\n      setFilterData(response.data);\n    });\n  }, []);\n  console.log(\"render\", persons.length);\n\n  const addPerson = (e) => {\n    e.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNumber,\n      id: persons.length + 1,\n    };\n\n    if (Nfound && found) {\n      window.alert(\"Both name and Number are already in your phonebook\");\n    } else if (!Nfound && found) {\n      if (window.confirm(\"Maybe update number?\")) {\n        const pers = persons.find((p) => p.name === newName);\n        updatePerson(pers.id);\n        setNewName(\"\");\n        setNewNumber(\"\");\n      }\n    } else {\n      noteService.create(personObject).then((response) => {\n        setPersons(persons.concat(response.data));\n        setFilterData(persons.concat(response.data));\n        setNewName(\"\");\n        setNewNumber(\"\");\n        setnotificatioMessage(` person: ${newName} was added correctly`);\n        setTimeout(() => {\n          setnotificatioMessage(null);\n        }, 5000);\n      });\n    }\n  };\n\n  const handlNameChange = (e) => {\n    console.log(e.target.value);\n    setNewName(e.target.value);\n  };\n  const handlNumberChange = (e) => {\n    console.log(e.target.value);\n    setNewNumber(e.target.value);\n  };\n  const handleNameFilter = (e) => {\n    console.log(e.target.value);\n    let filterLow = e.target.value.toLowerCase();\n    let result = [];\n    console.log(filterLow);\n    const arrLow = persons.map((persons) => persons.name.toLowerCase());\n    console.log(arrLow);\n    const includes = arrLow.includes(filterLow);\n    console.log(\"INCLUDES\", includes);\n\n    result = persons.filter((data) => {\n      return data.name.toLowerCase().indexOf(filterLow) !== -1;\n    });\n    setFilterData(result);\n  };\n\n  const deletePersonOf = (id) => {\n    const person = persons.find((p) => p.id === id);\n    if (window.confirm(`Do you really want to delete? ${person.name}`)) {\n      noteService\n        .elimina(id)\n        .then((res) => {\n          console.log(res);\n          const persond = persons.filter((p) => p.id !== id);\n          setFilterData(persond);\n          setnotificatioMessage(` person: ${newName} was deleted correctly`);\n          setTimeout(() => {\n            setnotificatioMessage(null);\n          }, 5000);\n        })\n        .catch((error) => {\n          setErrorMessage(`person: ${person.name} was already deleted`);\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 5000);\n        });\n    }\n  };\n\n  const updatePerson = (id) => {\n    const person = persons.find((p) => p.id === id);\n    console.log(person);\n    const personObject = {\n      name: person.name,\n      number: newNumber,\n      id: person.id,\n    };\n    noteService.update(id, personObject).then((response) => {\n      setFilterData(\n        persons.map((p) => (p.id !== person.id ? p : response.data))\n      );\n    });\n  };\n\n  const Show = ({ persons, deletePerson }) => {\n    return (\n      <li>\n        {\" \"}\n        {persons.name} : {persons.number}{\" \"}\n        <button onClick={deletePerson}> X </button>\n      </li>\n    );\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Error message={errorMessage} />\n      <Notification message={notificationMessage} />\n      <form>\n        <div>\n          <p>\n            filter by name:{\" \"}\n            <Input type=\"text\" onChange={(e) => handleNameFilter(e)} />\n          </p>\n        </div>\n      </form>\n      <form>\n        <div>\n          name: <Input value={newName} onChange={handlNameChange} />\n          <p>\n            number: <Input value={newNumber} onChange={handlNumberChange} />\n          </p>\n        </div>\n        <div>debug: {newName}</div>\n        <div>debug: {newNumber}</div>\n        <div>\n          <Button onClick={addPerson} type=\"submit\" text=\"ADD\" />\n        </div>\n        <h1> Numbers </h1>\n      </form>\n      <ul>\n        {filterData.map((persons) => (\n          <Show\n            key={persons.id}\n            persons={persons}\n            deletePerson={() => deletePersonOf(persons.id)}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}