{"version":3,"sources":["services/serv.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","delete","Error","message","className","Notification","Button","props","onClick","type","text","Input","value","onChange","App","useState","errorMessage","setErrorMessage","notificationMessage","setnotificatioMessage","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filterData","setFilterData","found","some","el","name","useEffect","noteService","then","response","data","console","log","length","deletePersonOf","person","find","p","window","confirm","res","persond","filter","setTimeout","catch","error","Show","deletePerson","number","e","target","result","filterLow","toLowerCase","arrLow","map","includes","indexOf","handleNameFilter","preventDefault","personObject","alert","concat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b60cc543.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = \"/api/notes\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  return axios.post(baseUrl, newObject);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject);\r\n};\r\nconst elimina = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`);\r\n};\r\nexport default {\r\n  getAll: getAll,\r\n  create: create,\r\n  update: update,\r\n  elimina: elimina,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport noteService from \"./services/serv\";\nimport axios from \"axios\";\nimport \"./index.css\";\nconst Error = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className=\"error\">{message}</div>;\n};\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className=\"notification\">{message}</div>;\n};\n\nconst Button = (props) => {\n  return (\n    <button onClick={props.onClick} type={props.type}>\n      {props.text}\n    </button>\n  );\n};\nconst Input = (props) => {\n  return <input value={props.value} onChange={props.onChange} />;\n};\nconst App = () => {\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [notificationMessage, setnotificatioMessage] = useState(null);\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filterData, setFilterData] = useState(persons);\n  const found = persons.some((el) => el.name === newName);\n\n  useEffect(() => {\n    noteService.getAll().then((response) => {\n      setPersons(response.data);\n      setFilterData(response.data);\n    });\n  }, []);\n  console.log(\"render\", persons.length);\n\n  const addPerson = (e) => {\n    e.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNumber,\n      id: persons.length + 1,\n    };\n\n    found\n      ? window.alert(\"NAME ALREADY EXIST\")\n      : noteService.create(personObject).then((response) => {\n          setPersons(persons.concat(response.data));\n          setFilterData(persons.concat(response.data));\n          setNewName(\"\");\n          setNewNumber(\"\");\n          setnotificatioMessage(` person: ${newName} was added correctly`);\n          setTimeout(() => {\n            setnotificatioMessage(null);\n          }, 5000);\n        });\n  };\n\n  const handlNameChange = (e) => {\n    console.log(e.target.value);\n    setNewName(e.target.value);\n  };\n  const handlNumberChange = (e) => {\n    console.log(e.target.value);\n    setNewNumber(e.target.value);\n  };\n  const handleNameFilter = (e) => {\n    console.log(e.target.value);\n    let filterLow = e.target.value.toLowerCase();\n    let result = [];\n    console.log(filterLow);\n    const arrLow = persons.map((persons) => persons.name.toLowerCase());\n    console.log(arrLow);\n    const includes = arrLow.includes(filterLow);\n    console.log(\"INCLUDES\", includes);\n\n    result = persons.filter((data) => {\n      return data.name.toLowerCase().indexOf(filterLow) !== -1;\n    });\n    setFilterData(result);\n  };\n\n  const deletePersonOf = (id) => {\n    const url = `http://localhost:3001/persons/${id}`;\n    const person = persons.find((p) => p.id === id);\n    if (window.confirm(`Do you really want to delete? ${person.name}`)) {\n      noteService\n        .elimina(id)\n        .then((res) => {\n          console.log(res);\n          const persond = persons.filter((p) => p.id !== id);\n          setFilterData(persond);\n          setnotificatioMessage(` person: ${newName} was deleted correctly`);\n          setTimeout(() => {\n            setnotificatioMessage(null);\n          }, 5000);\n        })\n        .catch((error) => {\n          setErrorMessage(`person: ${person.name} was already deleted`);\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 5000);\n        });\n    }\n  };\n\n  const Show = ({ persons, deletePerson }) => {\n    return (\n      <li>\n        {\" \"}\n        {persons.name} : {persons.number}{\" \"}\n        <button onClick={deletePerson}> X </button>\n      </li>\n    );\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Error message={errorMessage} />\n      <Notification message={notificationMessage} />\n      <form>\n        <div>\n          <p>\n            filter by name:{\" \"}\n            <Input type=\"text\" onChange={(e) => handleNameFilter(e)} />\n          </p>\n        </div>\n      </form>\n      <form>\n        <div>\n          name: <Input value={newName} onChange={handlNameChange} />\n          <p>\n            number: <Input value={newNumber} onChange={handlNumberChange} />\n          </p>\n        </div>\n        <div>debug: {newName}</div>\n        <div>debug: {newNumber}</div>\n        <div>\n          <Button onClick={addPerson} type=\"submit\" text=\"ADD\" />\n        </div>\n        <h1> Numbers </h1>\n      </form>\n      <ul>\n        {filterData.map((persons) => (\n          <Show\n            key={persons.id}\n            persons={persons}\n            deletePerson={() => deletePersonOf(persons.id)}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}